/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <5 6 8 15 16 17 18 25 26 27 28 7 33 34 35 9 19 29>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
  &kp Q         &kp W        &kp F                      &kp P          &kp B    &kp J  &kp L          &kp U                      &kp Y        &kp BACKSPACE
  &hml LCTRL A  &hml LALT R  &hml LGUI S                &hml LSHIFT T  &kp G    &kp M  &hmr RSHIFT N  &hmr RGUI E                &hmr RALT I  &hmr RCTRL O
  &kp Z         &kp X        &kp C                      &kp D          &kp V    &kp K  &kp H          &kp COMMA                  &kp DOT      &kp SEMICOLON
                             &hml LC(LA(LS(LGUI))) TAB  &kp ENTER      &mo 1    &mo 2  &kp SPACE      &hmr RC(RA(RS(RGUI))) ESC
            >;
        };

        numbers-n-symbols {
            bindings = <
  &kp N1         &kp N2        &kp N3        &kp N4         &none     &none   &kp FSLH           &kp APOS         &kp GRAVE               &kp BSLH
  &hml LCTRL N5  &hml LALT N6  &hml LGUI N7  &hml LSHFT N8  &none     &none   &hmr RSHIFT MINUS  &hmr RGUI EQUAL  &hmr RALT LEFT_BRACKET  &hmr RCTRL RIGHT_BRACKET
  &none          &none         &kp N9        &kp N0         &none     &none   &none              &kp COMMA        &kp PERIOD              &kp SEMICOLON
                               &none         &none          &trans    &trans  &none              &none
            >;
        };

        frow-n-naviation {
            bindings = <
  &kp F1         &kp F2        &kp F3        &kp F4         &none     &none   &kp HOME                &kp PAGE_DOWN   &kp PAGE_UP   &kp END
  &hml LCTRL F5  &hml LALT F6  &hml LGUI F7  &hml LSHFT F8  &none     &none   &hmr LSHIFT LEFT_ARROW  &hmr RGUI DOWN  &hmr RALT UP  &hmr RCTRL RIGHT
  &kp F9         &kp F10       &kp F11       &kp F12        &none     &none   &kp DEL                 &kp CAPS        &none         &none
                               &none         &none          &trans    &trans  &none                   &none
            >;
        };

        game-n-management {
            bindings = <
  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5    &none   &kp C_VOL_UP  &kp C_PLAY   &none            &none
  &kp Q         &kp W         &kp E         &kp R         &kp T     &none   &kp C_VOL_DN  &kp C_PAUSE  &kp PRINTSCREEN  &kp INSERT
  &kp A         &kp S         &kp D         &kp F         &kp G     &none   &kp K_MUTE    &none        &none            &none
                              &none         &none         &trans    &trans  &none         &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        game-n-management {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
